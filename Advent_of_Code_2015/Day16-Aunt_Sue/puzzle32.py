# As you're about to send the thank you note, something in the MFCSAM's instructions catches your eye. Apparently, it has an outdated retroencabulator, 
# and so the output from the machine isn't exact values - some of them indicate ranges.

# In particular, the cats and trees readings indicates that there are greater than that many (due to the unpredictable nuclear decay of cat dander and tree pollen), 
# while the pomeranians and goldfish readings indicate that there are fewer than that many (due to the modial interaction of magnetoreluctance).

# What is the number of the real Aunt Sue?

#----------------------------------------------------------------------------------------------------------------------------------------------------------------

#Read input
with open(r"Day16-Aunt_Sue\input.txt") as f:
    data = f.readlines()
    
#Outpot given by My First Crime Scene Analysis Machine
MFCSAM_output = {"children":3,"cats":7,"samoyeds":2,"pomeranians":3,"akitas":0,"vizslas":0,"goldfish":5,"trees":3,"cars":2,"perfumes":1}
#List of possible auints -> expecting to be only one but still making a list
possible_aunt = []

#For each aunt
for aunt in data:
    aunt = aunt.strip().split()
    #Set the possiblity flag to true
    auntFlag = True

    #Check if properties are equal to those generated by MFCSAM, if not set flag to false
    for index in range(1,int(len(aunt)/2)):
        #Last property in the input does not have a comma, so watch out on that
        if index == int(len(aunt)/2)-1:
            #If the property is "cats" or "trees"
            if aunt[index*2][:-1] == "cats" or aunt[index*2][:-1] == "trees":
                #Check if there is more than the MFCSAM said
                if int(aunt[index*2+1]) <= MFCSAM_output[aunt[index*2][:-1]]:
                    auntFlag = False
            #If the property is "pomeranians" or "goldfish"
            elif aunt[index*2][:-1] == "pomeranians" or aunt[index*2][:-1] == "goldfish":
                #Check if there is less than the MFCSAM said
                if int(aunt[index*2+1]) >= MFCSAM_output[aunt[index*2][:-1]]:
                    auntFlag = False
            #Else cheick if it is equal
            elif MFCSAM_output[aunt[index*2][:-1]] != int(aunt[index*2+1]):
                auntFlag = False
        else:
            #If the property is "cats" or "trees"
            if aunt[index*2][:-1] == "cats" or aunt[index*2][:-1] == "trees":
                #Check if there is more than the MFCSAM said
                if int(aunt[index*2+1][:-1]) <= MFCSAM_output[aunt[index*2][:-1]]:
                    auntFlag = False
            #If the property is "pomeranians" or "goldfish"
            elif aunt[index*2][:-1] == "pomeranians" or aunt[index*2][:-1] == "goldfish":
                #Check if there is less than the MFCSAM said
                if int(aunt[index*2+1][:-1]) >= MFCSAM_output[aunt[index*2][:-1]]:
                    auntFlag = False
            #Else cheick if it is equal
            elif MFCSAM_output[aunt[index*2][:-1]] != int(aunt[index*2+1][:-1]):
                auntFlag = False
    #If flag is true, then add aunt number to the list
    if auntFlag:
        possible_aunt.append(int(aunt[1][:-1]))   

print("The number of the Sue that sent the gift is",possible_aunt)